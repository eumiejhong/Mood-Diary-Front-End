{"version":3,"sources":["hooks/useEventListener.js","hooks/useLocalStorage.js","hooks/useUser.js","Navbar.js","Signup.js","Login.js","Home.js","Diary.js","Profile.js","Mood.js","App.js","reportWebVitals.js","index.js"],"names":["useEventListener","eventName","handler","element","savedHandler","useRef","useEffect","targetElement","current","window","addEventListener","eventListener","event","removeEventListener","useLocalStorage","key","initialValue","readValue","useCallback","item","localStorage","getItem","value","undefined","JSON","parse","console","log","parseJSON","error","warn","useState","storedValue","setStoredValue","handleStorageChange","newValue","Function","setItem","stringify","dispatchEvent","Event","useUser","user","setUser","clearUser","isLoggedIn","Navbar","onLogOutClick","e","a","preventDefault","fetch","method","headers","location","href","alert","className","to","onClick","Signup","first_name","last_name","username","email","password","country","image_url","bio","formData","setFormData","handleChange","target","name","data","handleSubmit","body","response","json","status","success","userData","Error","onSubmit","style","width","display","flexDirection","htmlFor","id","type","onChange","Login","navigate","useNavigate","Home","Object","keys","map","detail","Diary","user_id","title","date","post","mood","keywords","diaryData","state","diary","Profile","entries","quote","setQuote","fetchQuote","q","height","src","length","entry","Mood","useLocation","keyword","App","setEntries","updateEntries","path","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28c04c81.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react'\n\nfunction useEventListener(\n  eventName,\n  handler,\n  element\n) {\n  // Create a ref that stores handler\n  const savedHandler = useRef()\n\n  useEffect(() => {\n    // Define the listening target\n    const targetElement = element?.current || window\n    if (!(targetElement && targetElement.addEventListener)) {\n      return\n    }\n\n    // Update saved handler if necessary\n    if (savedHandler.current !== handler) {\n      savedHandler.current = handler\n    }\n\n    // Create event listener that calls handler function stored in ref\n    const eventListener = event => {\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!savedHandler?.current) {\n        savedHandler.current(event)\n      }\n    }\n\n    targetElement.addEventListener(eventName, eventListener)\n\n    // Remove event listener on cleanup\n    return () => {\n      targetElement.removeEventListener(eventName, eventListener)\n    }\n  }, [eventName, element, handler])\n}\n\nexport default useEventListener\n","import {\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\n\nimport useEventListener from './useEventListener'\n\nfunction useLocalStorage(key, initialValue){\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = useCallback(() => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (parseJSON(item)) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }, [initialValue, key])\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleStorageChange = useCallback(() => {\n    setStoredValue(readValue())\n  }, [readValue])\n\n  // this only works for other documents, not the current one\n  useEventListener('storage', handleStorageChange)\n\n  // this is a custom event, triggered in writeValueToLocalStorage\n  // See: useLocalStorage()\n  useEventListener('local-storage', handleStorageChange)\n\n  return [storedValue, setValue]\n}\n\n// A wrapper for \"JSON.parse()\"\" to support \"undefined\" value\nfunction parseJSON(value) {\n  try {\n    return value === 'undefined' ? undefined : JSON.parse(value ?? '')\n  } catch {\n    console.log('parsing error on', { value })\n    return undefined\n  }\n}\n\nexport default useLocalStorage\n","import useLocalStorage from './useLocalStorage';\n\nexport const useUser = () => {\n    const [user, setUser] = useLocalStorage('user', null);\n\n    const clearUser = () => setUser(null);\n    const isLoggedIn = !!user;\n\n    return {\n        user, setUser, clearUser, isLoggedIn\n    }\n}","import React, {useCallback} from 'react'\nimport { Link } from \"react-router-dom\";\nimport { useUser } from './hooks/useUser';\n\nconst Navbar = () => {\n    const {isLoggedIn, clearUser} = useUser();\n\n    const onLogOutClick = useCallback(async (e) => {\n        e.preventDefault();\n        try {\n            await fetch('/api/logout', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            clearUser();\n            window.location.href = '/';\n        } catch (error) {\n            window.alert(error);\n        }\n    }, []);\n\n    if (isLoggedIn) {\n        return (\n            <div className=\"flex\">\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/diary\">Diary</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\">Profile</Link>\n                </li>\n                <li>\n                    <button onClick={onLogOutClick}>Logout</button>\n                </li>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"flex\">\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/sign-up\">Signup</Link>\n                </li>\n                <li>\n                    <Link to=\"/login\">Login</Link>\n                </li>\n            </div>\n        )\n    } \n}\n\nexport default Navbar;","import React, { useState } from 'react'\nimport {useUser} from './hooks/useUser';\n\nexport default function Signup() {\n    const {user, setUser} = useUser()\n\n    const initialState = {\n        first_name: \"\",\n        last_name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        country: \"\",\n        image_url: \"\",\n        bio: \"\"\n    }\n    const [formData, setFormData] = useState(initialState)\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setFormData(data => ({...data, [name]: value}))\n    }\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        alert(`Welcome to Mood Diary, ${formData.username}`)\n        try {\n            const response = await fetch('/api/sign-up', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formData)\n            })\n            const data = await response.json()\n            const {status, success, userData} = data;\n            if (status === 404) {\n                throw new Error('No user');\n            }\n            setUser(userData)\n           \n        } catch (e) {\n            \n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} style={{width: 300, display: 'flex', flexDirection: 'column'}}>\n            <label htmlFor=\"first_name\">First Name:</label>\n            <input id=\"first_name\" type=\"text\" name=\"first_name\" value={formData.first_name} onChange={handleChange} />\n\n            <label htmlFor=\"last_name\">Last Name:</label>\n            <input id=\"last_name\" type=\"text\" name=\"last_name\" value={formData.last_name} onChange={handleChange} />\n\n            <label htmlFor=\"username\">Username:</label>\n            <input id=\"username\" type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} />\n\n            <label htmlFor=\"email\">Email:</label>\n            <input id=\"email\" type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n\n            <label htmlFor=\"password\">Password:</label>\n            <input id=\"password\" type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n\n            <label htmlFor=\"country\">Country:</label>\n            <input id=\"country\" type=\"text\" name=\"country\" value={formData.country} onChange={handleChange} />\n\n            <label htmlFor=\"image_url\">Image URL:</label>\n            <input id=\"image_url\" type=\"url\" name=\"image_url\" value={formData.image_url} onChange={handleChange} />\n\n            <label htmlFor=\"bio\">Bio:</label>\n            <input id=\"bio\" type=\"text\" name=\"bio\" value={formData.bio} onChange={handleChange} />\n\n            <button>Sign up!</button>\n        </form>\n    )\n}\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from './hooks/useUser'\n\nexport default function Login() {\n\n    const navigate = useNavigate()\n    const initialState = {\n        username: \"\",\n        password: \"\"\n    }\n    const {user, setUser} = useUser()\n    const [formData, setFormData] = useState(initialState)\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setFormData(data => ({...data, [name]: value}))\n    }\n    const handleSubmit = async(e) => {\n        e.preventDefault()\n        const {username, password} = formData\n        alert(`Welcome back, ${username}`)\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formData)\n            })\n            const data = await response.json();\n            const {status, success, userData} = data;\n            if (status === 404) {\n                throw new Error('No user');\n            }\n            setUser(userData)\n            navigate('/')\n        } catch (e) {\n        }\n        \n    }\n\n    if (user) {\n        return <div>{user.username} is logged in</div>\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"username\">Username:</label>\n            <input id=\"username\" type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} />\n\n            <label htmlFor=\"password\">Password:</label>\n            <input id=\"password\" type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n            <button>Log in!</button>\n        </form>\n    )\n}\n","import React from 'react'\nimport { useUser } from './hooks/useUser';\n\nexport default function Home() {\n    const {user, isLoggedIn} = useUser();\n    \n    if (isLoggedIn) {\n        return <div>\n            <h1>Welcome to Mood Diary</h1>\n            <p>User: {Object.keys(user).map(function(detail) {\n                return <li><b>{detail}:</b> {user[detail]}</li>\n            })}</p>\n        </div>\n    }\n    return (\n        <div>\n            <h1>Welcome to Mood Diary!</h1>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Diary() {\n    const navigate = useNavigate()\n\n    const initialState = {\n        user_id: \"\",\n        title: \"\",\n        date: \"\",\n        post: \"\",\n        mood: \"\",\n        keywords: \"\"\n    }\n    const [formData, setFormData] = useState(initialState)\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setFormData(data => ({...data, [name]: value}))\n    }\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch('/api/add-diary', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formData)\n            })\n            const data = await response.json();\n            const {status, success, diaryData} = data;\n            navigate('/mood', {state: {diary: diaryData}})\n\n        } catch (e) {\n            \n        }\n    }\n    return (\n        <form onSubmit={handleSubmit} style={{width: 300, display: 'flex', flexDirection: 'column'}}>\n            <label htmlFor=\"title\">Title:</label>\n            <input id=\"title\" type=\"text\" name=\"title\" value={formData.title} onChange={handleChange} />\n\n            <label htmlFor=\"date\">Date:</label>\n            <input id=\"date\" type=\"date\" name=\"date\" value={formData.date} onChange={handleChange} />\n\n            <label htmlFor=\"Post\">Post:</label>\n            <input id=\"post\" type=\"text\" name=\"post\" value={formData.post} onChange={handleChange} />\n            <button>Add Diary</button>\n        </form>\n    )\n}\n","import React, {useState, useEffect, useCallback} from 'react'\nimport {useUser} from './hooks/useUser'\nimport { useNavigate } from 'react-router-dom'\n\nconst Profile = ({entries}) => {\n    const navigate = useNavigate()\n    const {user, isLoggedIn} = useUser()\n    const [quote, setQuote] = useState([]);\n\n    const fetchQuote = async() => {\n        const response = await fetch('/api/random-quote')\n        console.log('response', response)\n        const {success, status, quote} = await response.json();\n        if (success) {\n            setQuote(`\"${quote.q}\" - ${quote.a}`)\n        }\n    }\n\n    useEffect(() => {\n        fetchQuote();\n    }, []);\n\n    if (isLoggedIn) {\n        return (\n            <div>\n                <h1>Welcome to your profile, {user.username}</h1>\n                <h4><b>Today's inspirational quote is...</b>{quote}</h4>\n                <ul>\n                    <li>\n                        <img width=\"300\" height=\"200\" src={user.image_url, 'https://images.pexels.com/photos/4050290/pexels-photo-4050290.jpeg'}></img>\n                    </li>\n                    <li>\n                        <b>Name: </b> {user.first_name} {user.last_name}\n                    </li>\n                    <li>\n                        <b>Email: </b> {user.email}\n                    </li>\n                    <li>\n                        <b>Country: </b> {user.country}\n                    </li>\n                    <li>\n                        <b>Bio: </b> {user.bio}\n                    </li>\n                </ul>\n\n                {entries && (\n                    <>\n                        <h3>Diary Entries ({entries.length})</h3>\n                        {entries.map((entry) => <div>{entry.post}<button onClick={() => navigate('/mood', {state: {diary: entry}})}>Show Mood</button></div>)}\n                    </>\n                )}\n            </div>\n        )\n    } else {\n        navigate('/')\n    }\n    \n}\n\nexport default Profile;","import React from 'react'\nimport { useLocation } from 'react-router-dom';\n\nexport default function Mood() {\n    const { state } = useLocation()\n    const diary = state.diary\n    console.log(diary)\n    return (\n        <div>\n            <h1>Here is your Diary and takeaways at a glance!</h1>\n            <li>\n                <b>Your Diary Entry:</b> {diary.post}\n            </li>\n            <li>\n                <b>Mood Analysis:</b> {diary.mood}\n            </li>\n            <li>\n                <b>Key Words that Resonate:</b> {diary['keywords'].map(function(keyword) {\n                    return <p>{keyword[0]}</p>\n                })}\n            </li>\n        </div>\n    )\n}\n","import React, {useEffect, useState, useMemo, useCallback} from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport './assets/main.css';\nimport Navbar from './Navbar';\nimport Signup from './Signup';\nimport Login from './Login';\nimport Home from './Home';\nimport Diary from './Diary';\nimport Profile from './Profile';\nimport Mood from './Mood';\nimport { useUser } from './hooks/useUser';\n\nfunction App() {\n  const {user, isLoggedIn} = useUser();\n\n  const [entries, setEntries] = useState([]);\n\n  const updateEntries = useCallback(async () => {\n    const response = await fetch('/api/diaries');\n    const data = await response.json();\n    const {success, diaryData} = data;\n    if (success) {\n      setEntries(diaryData)\n    } else {\n      window.alert('Error getting diary entries');\n    }\n  }, [setEntries]);\n\n  useEffect(updateEntries, []);\n\n  return (\n  <Router>\n    <Navbar/>\n    <Routes>\n      <Route path='/' element={<Home/>}/>\n      {isLoggedIn ? (\n        <>\n        <Route path=\"/diary\" element={<Diary />}/>\n        <Route path='/profile' element={<Profile entries={entries} updateEntries={updateEntries} />}/>\n        <Route path='/mood' element={<Mood />}/>\n        </>\n        ) : (\n        <>\n        <Route path='/sign-up' element={<Signup />}/>\n        <Route path='/login' element={<Login />}/>\n        </>\n        )}\n    </Routes>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}